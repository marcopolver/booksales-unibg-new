# Generated by Django 2.2.1 on 2019-05-30 19:31

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ClusteringInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('run_time', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Title',
            fields=[
                ('isbn', models.CharField(max_length=13, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=10)),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to='title_covers')),
                ('description', models.TextField(max_length=500)),
                ('creation_datetime', models.DateTimeField(auto_now_add=True)),
                ('last_edit_datetime', models.DateTimeField(auto_now=True)),
                ('category', models.CharField(choices=[('FIS', 'Fisica'), ('MAT', 'Matematica'), ('INF', 'Informatica'), ('MEC', 'Meccanica'), ('ELE', 'Elettronica'), ('ECO', 'Economia'), ('AUT', 'Automazione'), ('STA', 'Statistica')], max_length=3)),
                ('description_author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='descrizioni', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=5)),
                ('transaction_datetime', models.DateTimeField(auto_now_add=True)),
                ('buyer', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='acquisti', to=settings.AUTH_USER_MODEL)),
                ('seller', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vendite', to=settings.AUTH_USER_MODEL)),
                ('title', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vendite_titolo', to='sales.Title')),
            ],
        ),
        migrations.CreateModel(
            name='StudentProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('surname', models.CharField(max_length=20)),
                ('telephone_number', models.CharField(blank=True, max_length=16, null=True)),
                ('facebook_page', models.URLField(blank=True, null=True)),
                ('major', models.CharField(choices=[('ING_INF_T', 'Ingegneria informatica triennale'), ('ING_INF_M', 'Ingegneria informatica magistrale'), ('ING_MEC_T', 'Ingegneria meccanica triennale'), ('ING_MEC_M', 'Ingegneria meccanica magistrale'), ('ING_GES_T', 'Ingegneria gestionale triennale'), ('ING_GES_M', 'Ingegneria gestionale magistrale')], max_length=10)),
                ('year_of_study', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(1)])),
                ('sold_books_number', models.IntegerField(default=0)),
                ('bought_books_number', models.IntegerField(default=0)),
                ('reports_number', models.IntegerField(default=0)),
                ('cluster_number', models.IntegerField(default=0)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BookAd',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(max_length=500)),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('quality_class', models.CharField(choices=[('A', 'Classe A'), ('B', 'Classe B'), ('C', 'Classe C'), ('D', 'Classe D')], max_length=1)),
                ('publication_datetime', models.DateTimeField(auto_now_add=True)),
                ('last_edit_datetime', models.DateTimeField(auto_now=True)),
                ('photo', models.ImageField(upload_to='ads')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='annunci_studente', to=settings.AUTH_USER_MODEL)),
                ('title', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='annunci_titolo', to='sales.Title')),
            ],
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wishlist_students', to='sales.BookAd')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wishlist_books', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('ad', 'user')},
            },
        ),
        migrations.CreateModel(
            name='InterestingTitle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sales.Title')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interesting_titles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('title', 'user')},
            },
        ),
    ]
